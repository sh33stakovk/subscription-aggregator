// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создание подписки",
                "parameters": [
                    {
                        "description": "Данные подписки",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagger.SubscriptionExample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse400"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse500"
                        }
                    }
                }
            }
        },
        "/delete/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить подписку по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse400"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse500"
                        }
                    }
                }
            }
        },
        "/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Получение списка подписок (есть фильтрация по ID пользователя и по названию сервиса)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "11111111-1111-1111-1111-111111111111",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "Netflix",
                        "description": "Название сервиса",
                        "name": "service_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagger.SubscriptionResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse500"
                        }
                    }
                }
            }
        },
        "/read/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Получить данные подписки по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse400"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse500"
                        }
                    }
                }
            }
        },
        "/sum": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Получение суммы стоимости всех подписок за выбранный период по ID пользователя и имени сервиса",
                "parameters": [
                    {
                        "type": "string",
                        "default": "11111111-1111-1111-1111-111111111111",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Netflix",
                        "description": "Название сервиса",
                        "name": "service_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "06-2025",
                        "description": "Начало периода в формате MM-YYYY",
                        "name": "period_start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "08-2025",
                        "description": "Конец периода в формате MM-YYYY",
                        "name": "period_end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.SumResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse400"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse500"
                        }
                    }
                }
            }
        },
        "/update/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Обновить подписку по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные подписки",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagger.UpdateSubscriptionExample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse400"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "swagger.ErrorResponse400": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid {id/request/json}"
                }
            }
        },
        "swagger.ErrorResponse404": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "record not found in db"
                }
            }
        },
        "swagger.ErrorResponse500": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "failed to {create/find/update/delete} record in db"
                }
            }
        },
        "swagger.MessageResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "{created/updated/deleted}"
                }
            }
        },
        "swagger.SubscriptionExample": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "integer",
                    "example": 999
                },
                "service_name": {
                    "type": "string",
                    "example": "Netflix"
                },
                "start_date": {
                    "type": "string",
                    "example": "07-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "11111111-1111-1111-1111-111111111111"
                }
            }
        },
        "swagger.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "price": {
                    "type": "integer",
                    "example": 999
                },
                "service_name": {
                    "type": "string",
                    "example": "Netflix"
                },
                "start_date": {
                    "type": "string",
                    "example": "07-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "11111111-1111-1111-1111-111111111111"
                }
            }
        },
        "swagger.SumResponse": {
            "type": "object",
            "properties": {
                "sum_price": {
                    "type": "integer",
                    "example": 999
                }
            }
        },
        "swagger.UpdateSubscriptionExample": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "integer",
                    "example": 100
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
